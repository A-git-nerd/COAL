     1                                  [org 0x100]
     2 00000000 EB20                    jmp start
     3 00000002 FDFF01000200050006-     mainArray: dw -3,1,2,5,6,8 ;main array
     3 0000000B 000800             
     4 0000000E FFFF020005000600        subArray:dw -1,2,5,6 ;sub array
     5 00000016 0A00                    size_for_main_array: dw 10 ;size in terms of word 
     6 00000018 0600                    size_for_sub_array: dw 6 ; size in terms of word
     7                                  
     8 0000001A FFFF                    index:dw -1 ;index assume notFound at start
     9 0000001C BE0000                  mov si,0 ;for sub array
    10 0000001F BF0000                  mov di,0 ;for main array
    11                                  
    12                                  start:
    13                                  
    14                                  outerLoop:
    15 00000022 A1[1600]                mov ax,[size_for_main_array] ;checking if size_for_main_array is full , it should go at end
    16 00000025 39F8                    cmp ax,di
    17 00000027 743E                    je OuterLoopEnds
    18                                  
    19 00000029 A1[1800]                mov ax,[size_for_sub_array] ;checking if size_for_sub_array is full , it should go at end
    20 0000002C 39F0                    cmp ax,si
    21 0000002E 7437                    je OuterLoopEnds
    22                                  
    23                                  
    24 00000030 8B84[0E00]              mov ax,[subArray + si]
    25 00000034 3B85[0200]              cmp ax,[mainArray + di]
    26 00000038 740D                    je found ;comparing
    27                                  
    28                                  
    29 0000003A BE0000                  mov word si,0 ;if not equal then di+=2 but si=0 and index=-1 
    30 0000003D 47                      inc di
    31 0000003E 47                      inc di
    32 0000003F C706[1A00]FFFF          mov word [index],-1
    33 00000045 EBDB                    jmp outerLoop
    34                                  
    35                                  found:
    36 00000047 83FE00                  cmp word si,0  ;if found then checking its 1st index want to store index
    37 0000004A 7406                    je equaltoOne
    38 0000004C 47                      inc di ;if it was not 1st index of subArray then just di+=2 and si+=2
    39 0000004D 47                      inc di
    40 0000004E 46                      inc si
    41 0000004F 46                      inc si
    42 00000050 EBD0                    jmp outerLoop
    43                                  
    44                                  equaltoOne: ;storing 1st index of sub array in index
    45 00000052 8B85[0200]              mov ax,[mainArray+di]
    46 00000056 A3[1A00]                mov [index],ax
    47 00000059 47                      inc di ;if it was not 1st index of subArray then just di+=2 and si+=2
    48 0000005A 47                      inc di
    49 0000005B 46                      inc si
    50 0000005C 46                      inc si
    51 0000005D EBC3                    jmp outerLoop
    52                                  
    53                                  
    54                                  notFound: ;if not found then set index to -1
    55 0000005F C706[1A00]FFFF          mov word [index],-1
    56 00000065 EB0D                    jmp end
    57                                  
    58                                  OuterLoopEnds:
    59 00000067 A1[1800]                mov ax,[size_for_sub_array]
    60 0000006A 39F0                    cmp ax,si
    61 0000006C 75F1                    jne notFound
    62 0000006E 8B16[1A00]              mov dx,[index] ;storing index in dx if found
    63 00000072 EB00                    jmp end
    64                                  
    65                                  end:
    66 00000074 B8004C                  mov ax,0x4c00
    67 00000077 CD21                    int 0x21
