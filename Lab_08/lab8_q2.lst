     1                                  [org 0x0100]
     2                                  
     3 00000000 E98102                  jmp START
     4                                  
     5 00000003 000000000000000000-     carry : DW 240 DUP(0) 
     5 0000000C 000000000000000000-
     5 00000015 000000000000000000-
     5 0000001E 000000000000000000-
     5 00000027 000000000000000000-
     5 00000030 000000000000000000-
     5 00000039 000000000000000000-
     5 00000042 000000000000000000-
     5 0000004B 000000000000000000-
     5 00000054 000000000000000000-
     5 0000005D 000000000000000000-
     5 00000066 000000000000000000-
     5 0000006F 000000000000000000-
     5 00000078 000000000000000000-
     5 00000081 000000000000000000-
     5 0000008A 000000000000000000-
     5 00000093 000000000000000000-
     5 0000009C 000000000000000000-
     5 000000A5 000000000000000000-
     5 000000AE 000000000000000000-
     5 000000B7 000000000000000000-
     5 000000C0 000000000000000000-
     5 000000C9 000000000000000000-
     5 000000D2 000000000000000000-
     5 000000DB 000000000000000000-
     5 000000E4 000000000000000000-
     5 000000ED 000000000000000000-
     5 000000F6 000000000000000000-
     5 000000FF 000000000000000000-
     5 00000108 000000000000000000-
     5 00000111 000000000000000000-
     5 0000011A 000000000000000000-
     5 00000123 000000000000000000-
     5 0000012C 000000000000000000-
     5 00000135 000000000000000000-
     5 0000013E 000000000000000000-
     5 00000147 000000000000000000-
     5 00000150 000000000000000000-
     5 00000159 000000000000000000-
     5 00000162 000000000000000000-
     5 0000016B 000000000000000000-
     5 00000174 000000000000000000-
     5 0000017D 000000000000000000-
     5 00000186 000000000000000000-
     5 0000018F 000000000000000000-
     5 00000198 000000000000000000-
     5 000001A1 000000000000000000-
     5 000001AA 000000000000000000-
     5 000001B3 000000000000000000-
     5 000001BC 000000000000000000-
     5 000001C5 000000000000000000-
     5 000001CE 000000000000000000-
     5 000001D7 000000000000000000-
     5 000001E0 000000             
     6                                  
     7                                  ; Delay routine to make the scrolling effect visible
     8                                  DELAY:
     9 000001E3 51                          push cx
    10 000001E4 B90F00                      mov cx, 15         
    11                                  delay_loop1:
    12 000001E7 51                          push cx
    13 000001E8 B9FFFF                      mov cx, 0xFFFF    ; Inner loop for delay
    14                                  delay_loop2:
    15 000001EB E2FE                        loop delay_loop2
    16 000001ED 59                          pop cx
    17 000001EE E2F7                        loop delay_loop1
    18 000001F0 59                          pop cx
    19 000001F1 C3                          ret
    20                                  
    21                                  ; Store the current line to the CARRY buffer
    22                                  STORELINE:
    23 000001F2 55                          push bp
    24 000001F3 89E5                        mov bp, sp
    25                                  
    26 000001F5 50                          push ax
    27 000001F6 51                          push cx
    28 000001F7 1E                          push ds
    29 000001F8 56                          push si
    30 000001F9 06                          push es
    31 000001FA 57                          push di
    32                                  
    33                                      ; Set segment for screen memory
    34 000001FB 8CD8                        mov ax, ds
    35 000001FD 8EC0                        mov es, ax
    36 000001FF B800B8                      mov ax, 0xB800
    37 00000202 8ED8                        mov ds, ax
    38                                  
    39                                      ; Load source and destination pointers
    40 00000204 8B7604                      mov si, [bp+4]    ; Source: Line in screen memory 
    41 00000207 BF[0300]                    mov di, carry     ; Destination: CARRY buffer
    42 0000020A B9F000                      mov cx, 240       ; Copy 240 bytes (one line)
    43                                  
    44 0000020D FC                          cld               ; Clearing direction flag for forward copying
    45 0000020E F3A5                        rep movsw         ; Copy from SI (screen) to DI (carry buffer)
    46                                  
    47                                      ; Restore registers and stack
    48 00000210 5F                          pop di
    49 00000211 07                          pop es
    50 00000212 5E                          pop si
    51 00000213 1F                          pop ds
    52 00000214 59                          pop cx
    53 00000215 58                          pop ax
    54 00000216 5D                          pop bp
    55                                  
    56 00000217 C20200                      ret 2            
    57                                  
    58                                  ; Scroll the screen down by 3 rows
    59                                  SCROLLDOWN:
    60 0000021A 50                          push ax
    61 0000021B 51                          push cx
    62 0000021C 1E                          push ds
    63 0000021D 56                          push si
    64 0000021E 06                          push es
    65 0000021F 57                          push di
    66                                  
    67                                      ; Store the last line (row 24) before scrolling down
    68 00000220 B8C00D                      mov ax, 3520      ; Row 24 (the last row)
    69 00000223 50                          push ax
    70 00000224 E8CBFF                      call STORELINE
    71                                  
    72                                      ; Set segment for screen memory
    73 00000227 B800B8                      mov ax, 0xB800
    74 0000022A 8EC0                        mov es, ax
    75 0000022C 1E                          push ds
    76 0000022D 8ED8                        mov ds, ax
    77                                  
    78                                      ; Scroll down by copying the screen upwards
    79 0000022F BEBE0D                      mov si, 3518      ; Start from the last row minus 3 rows
    80 00000232 BF9E0F                      mov di, 3998      ; Move up 3 rows
    81 00000235 B9E006                      mov cx, 1760      ; Number of bytes to move (80 columns x 22 rows)
    82                                  
    83 00000238 FD                          std               ; Set direction flag for backward copying
    84 00000239 F3A5                        rep movsw         ; Copy screen data upwards
    85                                  
    86                                      ; Restore the last line from CARRY buffer to the first row
    87 0000023B 1F                          pop ds
    88 0000023C BE[0300]                    mov si, carry     ; Load the last line from carry buffer
    89 0000023F BF0000                      mov di, 0         ; Restore to row 0
    90 00000242 B9F000                      mov cx, 240       ; Copy 240 bytes (one line)
    91                                  
    92 00000245 FC                          cld               ; Clear direction flag for forward copying
    93 00000246 F3A5                        rep movsw         ; Copy from carry buffer to screen
    94                                  
    95                                      ; Restore registers
    96 00000248 5F                          pop di
    97 00000249 07                          pop es
    98 0000024A 5E                          pop si
    99 0000024B 1F                          pop ds
   100 0000024C 59                          pop cx
   101 0000024D 58                          pop ax
   102                                  
   103 0000024E C3                          ret
   104                                  
   105                                  ; Scroll the screen up by 3 rows
   106                                  SCROLLUP:
   107 0000024F 50                          push ax
   108 00000250 51                          push cx
   109 00000251 1E                          push ds
   110 00000252 56                          push si
   111 00000253 06                          push es
   112 00000254 57                          push di
   113                                  
   114                                      ; Store the first line (row 0) before scrolling up
   115 00000255 B80000                      mov ax, 0         ; Row 0 (the first row)
   116 00000258 50                          push ax
   117 00000259 E896FF                      call STORELINE
   118                                  
   119                                      ; Set segment for screen memory
   120 0000025C B800B8                      mov ax, 0xB800
   121 0000025F 8EC0                        mov es, ax
   122 00000261 1E                          push ds
   123 00000262 8ED8                        mov ds, ax
   124                                  
   125                                      ; Scroll up by copying the screen downwards
   126 00000264 BEE001                      mov si, 480       ; Start from the second row (row 3)
   127 00000267 BF0000                      mov di, 0         ; Move to the first row
   128 0000026A B9E006                      mov cx, 1760      ; Number of bytes to move (80 columns x 22 rows)
   129                                  
   130 0000026D FC                          cld               ; Clear direction flag for forward copying
   131 0000026E F3A5                        rep movsw         ; Copy screen data downwards
   132                                  
   133                                      ; Restore the first line from CARRY buffer to the last row
   134 00000270 1F                          pop ds
   135 00000271 BE[0300]                    mov si, carry     ; Load the first line from carry buffer
   136 00000274 BFC00D                      mov di, 3520      ; Restore to row 24 (the last row)
   137 00000277 B9F000                      mov cx, 240       ; Copy 240 bytes (one line)
   138                                  
   139 0000027A FC                          cld               ; Clear direction flag for forward copying
   140 0000027B F3A5                        rep movsw         ; Copy from carry buffer to screen
   141                                  
   142                                      ; Restore registers
   143 0000027D 5F                          pop di
   144 0000027E 07                          pop es
   145 0000027F 5E                          pop si
   146 00000280 1F                          pop ds
   147 00000281 59                          pop cx
   148 00000282 58                          pop ax
   149                                  
   150 00000283 C3                          ret
   151                                  
   152                                  ; Infinite loop to continuously scroll the screen up and down
   153                                  START:
   154                                  L3:
   155                                  ; Adding delay for visibility
   156 00000284 E85CFF                      call DELAY
   157 00000287 E890FF                      call SCROLLDOWN    ; Scroll down by 3 rows
   158                                  ; Adding delay for visibility   
   159 0000028A E856FF                     call DELAY      
   160 0000028D E8BFFF                      call SCROLLUP      ; Scroll up by 3 rows
   161                                  	; Adding delay for visibility
   162 00000290 E850FF                  	call DELAY
   163 00000293 EBEF                        jmp L3             ; Loop indefinitely
   164                                  
   165                                      ; End the program
   166 00000295 B8004C                      mov ax, 0x4C00
   167 00000298 CD21                        int 0x21
