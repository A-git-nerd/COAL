     1                                  [org 0x0100]
     2                                  
     3 00000000 EB43                    jmp start             ; Jump to main program start
     4 00000002 0900                    counter dw 9          ; Memory location for the counter, initialized to 0
     5                                  
     6                                  ; Clear screen function
     7                                  clrSrc:
     8 00000004 B800B8                      mov ax, 0xb800         ; Video segment for text mode
     9 00000007 8EC0                        mov es, ax
    10 00000009 BF0000                      mov di, 0              ; Start at top-left corner
    11 0000000C B82007                      mov ax, 0x0720         ; Space character with white-on-black attribute
    12 0000000F B9D007                      mov cx, 2000           ; Clear 2000 words (80x25 screen)
    13 00000012 F3AB                        rep stosw
    14 00000014 C3                          ret
    15                                  
    16                                  ; ISR for INT 0x60
    17                                  my_isr:
    18                                      ; Save registers
    19 00000015 50                          push ax
    20 00000016 53                          push bx
    21 00000017 51                          push cx
    22                                  
    23                                      ; Increment the counter
    24 00000018 A1[0200]                    mov ax, [counter]
    25 0000001B 40                          inc ax
    26 0000001C A3[0200]                    mov [counter], ax
    27                                  
    28                                      ; Display counter in hexadecimal (simplified to display 'A' for testing)
    29 0000001F 89C3                        mov bx, ax         ; Copy counter value to BX for display
    30 00000021 E80400                      call print_hex     ; Call function to print BX in hex
    31                                  
    32                                      ; Restore registers
    33 00000024 59                          pop cx
    34 00000025 5B                          pop bx
    35 00000026 58                          pop ax
    36                                  
    37 00000027 CF                          iret               ; Return from interrupt
    38                                  
    39                                  ; Print hexadecimal value in BX (for testing, just displays 'A')
    40                                  ; Print hexadecimal value in BX
    41                                  print_hex:
    42 00000028 60                          pusha              ; Save all registers (optional, but safe for testing)
    43 00000029 B90400                      mov cx, 4          ; 4 hex digits (16 bits, so 4 nibbles)
    44                                  
    45                                  print_hex_loop:
    46 0000002C C1C304                      rol bx, 4          ; Rotate left by 4 bits to isolate each hex digit
    47 0000002F 88D8                        mov al, bl         ; Move isolated digit into AL
    48 00000031 240F                        and al, 0x0F       ; Mask out the lower 4 bits (single hex digit)
    49                                  
    50                                      ; Convert to ASCII
    51 00000033 3C09                        cmp al, 9
    52 00000035 7604                        jbe below_ten
    53 00000037 0437                        add al, 'A' - 10   ; For A-F hex values
    54 00000039 EB02                        jmp display_char
    55                                  
    56                                  below_ten:
    57 0000003B 0430                        add al, '0'        ; For 0-9 hex values
    58                                  
    59                                  display_char:
    60                                      ; Display character using BIOS teletype service
    61 0000003D B40E                        mov ah, 0x0E       ; BIOS teletype function
    62 0000003F CD10                        int 0x10           ; Display the character in AL on the screen
    63                                  
    64 00000041 E2E9                        loop print_hex_loop; Repeat for each hex digit
    65 00000043 61                          popa               ; Restore all registers
    66 00000044 C3                          ret
    67                                  
    68                                  
    69                                  ; Main program
    70                                  start:
    71 00000045 E8BCFF                      call clrSrc            ; Clear the screen initially
    72                                  
    73                                      ; Set up ES to point to the IVT (segment 0x0000)
    74 00000048 FA                          cli                    ; Disable interrupts temporarily
    75 00000049 31C0                        xor ax, ax             ; Set AX to 0
    76 0000004B 8EC0                        mov es, ax             ; Set ES to 0, pointing to the IVT
    77                                  
    78                                      ; Install custom ISR for INT 0x60
    79                                      ;mov ax, cs             ; Load code segment
    80 0000004D 268C0E8201                  mov [es:0x60 * 4 + 2], cs ; Set segment of ISR in IVT
    81                                     ; mov ax, my_isr
    82 00000052 26C7068001[1500]            mov word [es:0x60 * 4], my_isr      ; Set offset of ISR in IVT
    83                                  
    84 00000059 FB                          sti                    ; Re-enable interrupts
    85                                  
    86                                      ; Trigger INT 0x60 in a loop to test ISR
    87 0000005A B90900                      mov cx, 9              ; Set loop count for testing
    88                                  main_loop:
    89 0000005D CD60                        int 0x60               ; Trigger INT 0x60, which calls the ISR
    90 0000005F E80700                      call delay             ; Call a delay to slow down the output
    91 00000062 E2F9                        loop main_loop         ; Repeat 9 times
    92                                  
    93                                      ; Exit program
    94 00000064 B8004C                      mov ax, 0x4C00
    95 00000067 CD21                        int 0x21
    96                                  
    97                                  ; Simple delay function
    98                                  delay:
    99 00000069 51                          push cx
   100 0000006A B90300                      mov cx, 3              ; Outer loop count (adjust to increase/decrease delay)
   101                                  delay_loop1:
   102 0000006D 51                          push cx
   103 0000006E B9FFFF                      mov cx, 0xFFFF         ; Inner loop count (adjust to increase/decrease delay)
   104                                  delay_loop2:
   105 00000071 E2FE                        loop delay_loop2
   106 00000073 59                          pop cx
   107 00000074 E2F7                        loop delay_loop1
   108 00000076 59                          pop cx
   109 00000077 C3                          ret
