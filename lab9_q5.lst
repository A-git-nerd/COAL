     1                                  [org 100h]
     2                                  
     3                                  section .data
     4 00000000 4920616D2061207374-         myStr db 'I am a student of coal', 0  ; Input string with words
     4 00000009 7564656E74206F6620-
     4 00000012 636F616C00         
     5 00000017 0D0A00                      newline db 13, 10, 0                  ; Newline sequence for printing each word
     6                                  
     7                                  section .bss
     8 00000000 <res 32h>                   buffer resb 50                        ; Allocate 50 bytes for token storage
     9                                  
    10                                  section .text
    11                                  start:
    12                                      ; Initialize SI to point to the start of myStr
    13 00000000 8D36[0000]                  lea si, [myStr]
    14                                  
    15                                  next_word:
    16                                      ; Skip leading spaces
    17 00000004 8A04                        mov al, [si]
    18 00000006 3C20                        cmp al, ' '                           ; Check if it's a space
    19 00000008 7503                        jne find_word                         ; If not a space, proceed to find a word
    20 0000000A 46                          inc si                                ; Skip the space
    21 0000000B EBF7                        jmp next_word                         ; Repeat
    22                                  
    23                                  find_word:
    24                                      ; Initialize DI to point to buffer to store the token
    25 0000000D 8D3E[0000]                  lea di, [buffer]
    26                                      
    27                                      ; Copy word into the buffer
    28                                  copy_word:
    29 00000011 8A04                        mov al, [si]                          ; Load byte from myStr
    30 00000013 3C20                        cmp al, ' '                           ; Check if it's a space
    31 00000015 7408                        je print_word                         ; If space, print the word
    32 00000017 3C00                        cmp al, 0                             ; Check for end of string
    33 00000019 7404                        je print_word                         ; If end of string, print the last word
    34                                      
    35 0000001B AA                          stosb                                 ; Store the character in buffer
    36 0000001C 46                          inc si                                ; Move to the next character
    37 0000001D EBF2                        jmp copy_word                         ; Repeat
    38                                  
    39                                  print_word:
    40                                      ; Null terminate the token in the buffer
    41 0000001F C60500                      mov byte [di], 0
    42                                  
    43                                      ; Print the word (token) from buffer
    44 00000022 8D16[0000]                  lea dx, [buffer]
    45 00000026 B409                        mov ah, 09h
    46 00000028 CD21                        int 21h
    47                                  
    48                                      ; Print newline after each word
    49 0000002A 8D16[1700]                  lea dx, [newline]
    50 0000002E B409                        mov ah, 09h
    51 00000030 CD21                        int 21h
    52                                  
    53                                      ; Check if the string ended
    54 00000032 3C00                        cmp al, 0                             ; If null byte, end the program
    55 00000034 7403                        je end_program
    56                                  
    57 00000036 46                          inc si                                ; Move to the next character after the space
    58 00000037 EBCB                        jmp next_word                         ; Repeat the process for the next word
    59                                  
    60                                  end_program:
    61                                      ; Exit the program
    62 00000039 B8004C                      mov ax, 4C00h
    63 0000003C CD21                        int 21h
