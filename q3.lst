     1                                  ; size=5
     2                                  ; size/2=2
     3                                  ; while(size>0){
     4                                  ; if(head!=tail){
     5                                  ; return -1;
     6                                  ; }
     7                                  ; head++;
     8                                  ; tail--;
     9                                  ; size--;
    10                                  ; }
    11                                  ; }
    12                                  
    13                                  ; return 1;
    14                                  
    15                                  [org 100h]
    16 00000000 BA0000                  mov dx,0
    17 00000003 8B0E[7A00]              mov cx,[size]
    18 00000007 8B1E[7E00]              mov bx ,[tail]
    19                                  
    20                                  Finding_Size:
    21 0000000B 8B87[6E00]              mov ax,[array+bx] 
    22 0000000F 83F8FF                  cmp ax,-1
    23 00000012 7405                    je loll
    24 00000014 41                      inc cx
    25 00000015 43                      inc bx
    26 00000016 43                      inc bx
    27 00000017 EBF2                    jmp Finding_Size
    28                                  
    29                                  loll:
    30 00000019 4B                      dec bx
    31 0000001A 4B                      dec bx
    32 0000001B EB00                    jmp lol
    33                                  
    34                                  lol:
    35 0000001D 891E[7E00]              mov [tail],bx
    36 00000021 890E[7A00]              mov [size],cx
    37 00000025 BB0200                  mov bx,2
    38 00000028 EB00                    jmp divide
    39                                  
    40                                  
    41                                  
    42                                  divide:
    43 0000002A 83E902                  sub cx,2
    44 0000002D 42                      inc dx
    45 0000002E 83F901                  cmp cx,1
    46 00000031 7602                    jbe size_found
    47 00000033 EBF5                    jmp divide
    48                                  
    49                                  size_found:
    50 00000035 8B36[7C00]              mov si,[head]
    51 00000039 8B3E[7E00]              mov di,[tail]
    52 0000003D 8B84[6E00]              mov ax,[array+si]
    53 00000041 8B9D[6E00]              mov bx,[array+di]
    54 00000045 39D8                    cmp ax,bx
    55 00000047 751D                    jne not_found
    56 00000049 FF06[7C00]              inc word [head]
    57 0000004D FF06[7C00]              inc word [head]
    58 00000051 FF0E[7E00]              dec word [tail]
    59 00000055 FF0E[7E00]              dec word [tail]
    60 00000059 4A                      dec dx
    61 0000005A 83FA00                  cmp dx,0
    62 0000005D 7402                    je found
    63 0000005F EBD4                    jmp size_found
    64                                  
    65                                  
    66                                  
    67                                  found:
    68 00000061 BA0100                  mov dx,1
    69 00000064 EB03                    jmp end
    70                                  
    71                                  not_found:
    72 00000066 BA0000                  mov dx,0
    73                                  end:
    74 00000069 B84C00                  mov ax,4ch
    75 0000006C CD21                    int 21h
    76                                  
    77 0000006E 0100020003003E0001-     array:dw 1,2,3,62,1,-1
    77 00000077 00FFFF             
    78 0000007A 0000                    size:dw 0
    79 0000007C 0000                    head:dw 0
    80 0000007E 0000                    tail: dw 0
